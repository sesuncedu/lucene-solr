<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="singleJar" name="Solrmarc">

    <property name="solrmarc.basedir" value="." />

    <!-- property files -->
    <property file="${solrmarc.basedir}/build_override.properties" />
    <property file="${solrmarc.basedir}/build.properties" />

    <!-- import other ant scripts -->
    <property name="buildtools.path" value="${solrmarc.basedir}/buildtools" />
    <property name="one-jar.dist.dir" value="${buildtools.path}" />

    <import file="${buildtools.path}/one-jar-ant-task.xml" />

	<tstamp>
		<format property="year" pattern="yyyy" />
		<format property="DSTAMP" pattern="yyyy-MM-dd" />
		<format property="TSTAMP" pattern="HH:mm:ss" />
		<format property="dateversion" pattern="yyyy.MM.dd.HH.mm.ss" />
	</tstamp>

    <path id="classpath.jars" description="Jars for classpath, sensitive to solr version">
        <fileset dir="${solrmarc.basedir}/${lib.dir}" excludes="*/*.jar" includes="*.jar" />
	</path>


    <!-- Solr Version Properties Targets -->
  <target name="solrversion" unless="${solr.version}">
        <input message="solr.version must be defined as either 1.2, 1.3, or 1.4 (or war)" validargs="1.2,1.3,1.4,war" addproperty="solr.version" defaultvalue="1.2" />
        <!-- put solr.version property into the build_override.properties -->
        <propertyfile file="${solrmarc.basedir}/build_override.properties">
          <entry key="solr.version" value="${solr.version}" />
      </propertyfile>
  </target>

	<target name="clean" description="clean the generated directories">
        <delete dir="${solrmarc.basedir}/${build.dir}" />
        <delete dir="${solrmarc.basedir}/${doc.dir}" />
        <delete dir="${solrmarc.basedir}/${tag.dir}" />
	</target>

	<target name="init" description="create (empty) generated directories">
        <mkdir dir="${solrmarc.basedir}/${build.dir}" />
        <mkdir dir="${solrmarc.basedir}/${dist.dir}" />
	</target>

    <target name="compile" depends="init,solrversion" description="Compile source code into the build directory">
        <javac destdir="${solrmarc.basedir}/${build.dir}" srcdir="${solrmarc.basedir}/${src.dir}" target="${java.compat.version}" source="${java.compat.version}" debug="true" debuglevel="lines,vars,source" encoding="utf-8">
            <include name="**/*.java" />
            <classpath refid="classpath.jars" />
		</javac>
	</target>
	
    <target name="build" depends="solrversion,compile" description="create MarcImporter.jar in the build directory">
		<echo message="${ant.project.name}: ${ant.file}" />

        <jar destfile="${solrmarc.basedir}/${build.dir}/${jar.name}">
            <fileset dir="${solrmarc.basedir}/${build.dir}" includes="**/*.class" />
			<manifest>
				<attribute name="Main-Class" value="org.solrmarc.marc.MarcImporter" />
			</manifest>
		</jar>

      <jar destfile="${solrmarc.basedir}/${build.dir}/zclient.jar">
            <fileset dir="${solrmarc.basedir}/${build.dir}" includes="**/ZClient.class,**/MarcTranslatedReader.class" />
		</jar>

	</target>

    <target name="singleJar" depends="build"  description="Create single jar (using One-jar) which contains all of the code and libraries for running SolrMarc">
        <copy tofile="${solrmarc.basedir}/${buildtools.path}/manifest.mf" file="${solrmarc.basedir}/${buildtools.path}/manifest_template.mf" overwrite="true">
			<filterset>
                <filter token="NAMEOFMAINCLASS" value="org.solrmarc.marc.MarcImporter" />
			</filterset>

		</copy>

        <one-jar destfile="${solrmarc.basedir}/${dist.dir}/${ant.project.name}.jar" manifest="${solrmarc.basedir}/${buildtools.path}/manifest.mf">
            <main jar="${solrmarc.basedir}/${build.dir}/${jar.name}">
			</main>

			<lib>
             <fileset dir="${solrmarc.basedir}/${lib.dir}" includes="*.jar" />
			</lib>

         <fileset dir="${solrmarc.basedir}/${trans.map.path}" includes="*.properties" />
		</one-jar>
	</target>


    <!-- Testing Targets -->

	<target name="testClean" description="clean generated test directories">
        <delete dir="${solrmarc.basedir}/${test.build.dir}" />
	</target>

	<target name="testInit" depends="testClean,solrversion" description="create (empty) generated test directories">
        <mkdir dir="${solrmarc.basedir}/${test.build.dir}" />
	</target>

	<target name="testCompile" depends="clean,testInit,build" description="Compile test source code into test build dir">
        <javac destdir="${solrmarc.basedir}/${test.build.dir}" srcdir="${solrmarc.basedir}/${test.src.dir}" target="${java.compat.version}" source="${java.compat.version}" debug="on" encoding="utf-8">
            <include name="org/**/*.java" />
            <exclude name="solr/**/*.java" />
			<classpath>
             <pathelement location="${solrmarc.basedir}/${build.dir}/MarcImporter.jar" />
             <path refid="classpath.jars" />
             <fileset dir="${solrmarc.basedir}/${lib.dir}/solr_${solr.version}" includes="*.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="testJar" depends="testCompile" description="jar up test class files">
        <jar jarfile="${solrmarc.basedir}/${test.build.dir}/${test.jar}">
            <fileset dir="${solrmarc.basedir}/${test.build.dir}" includes="**/*.class" />
		</jar>
	</target>

    <target name="test" depends="testJar" description="run junit tests">
		<echo message="using solr version: ${solr.version}" />

        <junit showoutput="yes" printsummary="yes" fork="yes">
			<formatter type="plain" usefile="no" />

			<classpath>
                <pathelement location="${solrmarc.basedir}/${test.build.dir}/${test.jar}" />
                <pathelement location="${solrmarc.basedir}/${build.dir}/MarcImporter.jar" />
                <path refid="classpath.jars" />
			</classpath>

            <sysproperty key="solrmarc.path" path="${solrmarc.basedir}" />
            <sysproperty key="solr.path" path="${solrmarc.basedir}/${test.solr.path}" />
            <sysproperty key="solr.data.dir" path="${solrmarc.basedir}/${test.solr.data.dir}" />
			<!-- these crucial properties set here b/c normally they are in 
			   the properties file indicated with an argument in the command line -->
            <sysproperty key="solr.indexer" value="${solr.indexer}" />
            <sysproperty key="solr.indexer.properties" value="${solr.indexer.properties}" />
            <sysproperty key="marc.source" value="${marc.source}" />
			
            <test name="${test.class}" />
		</junit>
	</target>


    <!-- Utility Targets -->

	<target name="Z3950Client">
		<java classname="MarcImporter" failonerror="true" fork="yes">
            <classpath refid="classpath.jars" />
		</java>
	</target>

	<!-- Macro to build a checksum file
                Only needed until the "format" option is supported
                by ant's checksum task -->
	<macrodef name="solrmarc-checksum">
		<attribute name="file" />
		<sequential>
			<checksum file="@{file}" property="@{file}.sum" algorithm="${checksum.algorithm}" />
			<basename file="@{file}" property="@{file}.base" />
			<concat destfile="@{file}.${checksum.algorithm}" force="yes" append="false" fixlastline="yes">
				<header trimleading="yes">${@{file}.sum} </header>
				<!-- empty fileset to trick concat -->
                <fileset dir="${solrmarc.basedir}" excludes="**" />
                <footer trimleading="yes">${@file}.base}</footer>
			</concat>
		</sequential>
	</macrodef>

	<target name="gzip" description="Create a gzipped tarball and checksum file (in the tag directory)" depends="build">
		<echo message="Make sure to export the project (svn export) before running this task" />

        <mkdir dir="${solrmarc.basedir}/${tag.dir}" />
        <tar destfile="${tag.dir}/${ant.project.name}.tar.gz" compression="gzip" basedir="${solrmarc.basedir}" excludes="bin/**,src/**,**/build.xml,**/**.mrc,**/.svn" />
        <solrmarc-checksum file="${solrmarc.basedir}/${tag.dir}/${ant.project.name}.tar.gz" />
	</target>

	<target name="doc" description="Generate JavaDoc documenation">
        <mkdir dir="${solrmarc.basedir}/${doc.dir}" />
        <javadoc destdir="${solrmarc.basedir}/${doc.dir}" 
		         author="true" version="true" overview="overview.html" use="true" 
		         windowtitle="${ant.project.name}" 
		         doctitle="${ant.project.name} Java Documentation" bottom="">
            <packageset dir="${solrmarc.basedir}/${src.dir}" defaultexcludes="yes" />
            <link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api/" packagelistLoc="${solrmarc.basedir}" />
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
			<link href="http://junit.sourceforge.net/javadoc/" />
			<link href="http://lucene.apache.org/java/docs/api/" />
			<link href="http://lucene.apache.org/solr/api/" />
		</javadoc>
	</target>

	<target name="usage" description="Prints usage instructions">
		<echo message="Welcome to the Solrmarc indexing project" />
		<echo message="Use 'ant' to build the latest code" />
		<echo message="Use 'ant -Dsolr.version=&quot;1.2&quot;' to build the latest code based on version 1.2 of Solr" />
		<echo message="Use 'ant -Dsolr.version=&quot;1.3&quot;' to build the latest code based on version 1.3 of Solr" />
		<echo message="For developers" />
		<echo message="Use 'ant -p' to see all available commands" />
	</target>

</project>
