<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="build" name="BlacklightIndexer">

	<property file="build_override.properties" />
	<property file="build.properties" />

	<tstamp>
		<format property="year" pattern="yyyy" />
		<format property="DSTAMP" pattern="yyyy-MM-dd" />
		<format property="TSTAMP" pattern="HH:mm:ss" />
		<format property="dateversion" pattern="yyyy.MM.dd.HH.mm.ss" />
	</tstamp>

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${tag.dir}" />
	</target>

	<target name="dependencies" depends="solrversion" >
		<unjar src="${lib.dir}/solrmarc_dist/SolrMarc.jar" dest="${lib.dir}" >
		    <patternset>
		        <include name="lib/marc4j.jar"/>
		        <include name="main/MarcImporter.jar"/>
		    </patternset>
			<flattenmapper />
		</unjar>
        <path id="classpath" description="Sets the classpath to use the lib folder">
        	<fileset dir="${lib.dir}">
            	<include name="*.jar" />
            </fileset>
        </path>

	</target>
    
    <target name="solrversion" unless="${solr.version}">
        <input message="solr.version must be defined as either 1.2, 1.3, or 1.4 (or war)" 
                       validargs="1.2,1.3,1.4,war" 
                       addproperty="solr.version" defaultvalue="1.3" />
        <propertyfile file="build_override.properties">
            <entry key="solr.version" value="${solr.version}" />
        </propertyfile>
    </target>
	
    <target name="solrversioncheck">
        <condition property="solr.version.war">
            <equals arg1="${solr.version}" arg2="war" />
        </condition>
    </target>

	<target name="solrwarlocation" depends="solrversioncheck" if="solr.version.war" unless="solr.war.location">
		<input message="Enter full path of where solr.war file is located:" 
                        addproperty="solr.war.location"  />
		<condition property="war.exists">
			<available file="${solr.war.location}"/>
		</condition>
		<fail unless="war.exists">Solr.war file ${solr.war.location} does not exist</fail>
	    <propertyfile file="build_override.properties">
	    	<entry key="solr.war.location" value="${solr.war.location}" />
	    </propertyfile>
	</target>

	<target name="solrlibextract" depends="solrwarlocation" if="solr.version.war">
		<mkdir dir="${lib.dir}/solr_war" />
		<unwar src="${solr.war.location}" dest="${lib.dir}/solr_war" overwrite="true">
			<patternset>
				<include name="**/lucene-*.jar" />
			    <include name="**/apache-solr-*.jar" />
				<include name="**/slf4j*.jar" />
			</patternset>
            <mapper type="flatten"/>
		</unwar>
	</target>
	
    <target name="checksolrjars" if="solr.version.war" >
        <condition property="solr.external.uptodate" >
        	<and>
        		<available filepath="${dist.dir}" file="solr_${solr.version}_lib.jar" type="file"/>
        		<uptodate targetfile="${dist.dir}/solr_${solr.version}_lib.jar">
        		    <srcfiles dir="${lib.dir}/solr_${solr.version}" includes="*.jar" />
        		</uptodate>
        	</and>
        </condition>
    </target>

	<target name="solrjars" depends="solrversion,solrversioncheck,solrlibextract,checksolrjars" 
		    if="solr.version.war" unless="solr.external.uptodate">
	    <mkdir dir="${build.dir}/solrjar" />
		<unjar dest="${build.dir}/solrjar" overwrite="true">
			<fileset dir="${lib.dir}/solr_${solr.version}">
			  	<include name="*.jar" />
			</fileset>
		</unjar>
		<jar destfile="${lib.dir}/solrmarc_dist/solr_${solr.version}_lib.jar">
			<fileset dir="${build.dir}/solrjar">
				<exclude name="**/*.mf" />
			</fileset>
		</jar>
        <delete dir="${build.dir}/solrjar" />
	</target>

	<target name="build" depends="init,dependencies,solrjars" >
		<echo message="${ant.project.name}: ${ant.file}" />

		<javac destdir="${build.dir}" debug="source" target="${java.compat.version}" source="${java.compat.version}" encoding="utf-8">
			<src path="${src.dir}" />
			<classpath refid="classpath" />
		</javac>

		<jar destfile="${dist.dir}/BlacklightIndexer.jar">
			<fileset dir="bin" includes="**/*.class" />
			<fileset dir="." includes="*.properties" excludes="build.properties"/>
		</jar>
		<copy file="${lib.dir}/solrmarc_dist/SolrMarc.jar" todir="${dist.dir}" />
		<copy file="${lib.dir}/solrmarc_dist/solr_${solr.version}_lib.jar" todir="${dist.dir}" />
	</target>

	<target name="usage" description="Prints usage instructions">
		<echo message="Welcome to the Solrmarc indexing project" />
		<echo message="Use 'ant' to build the latest code" />
		<echo message="Use 'ant -Dsolr.version=&quot;1.2&quot;' to build the latest code based on version 1.2 of Solr" />
		<echo message="Use 'ant -Dsolr.version=&quot;1.3&quot;' to build the latest code based on version 1.3 of Solr" />
		<echo message="For developers" />
		<echo message="Use 'ant clean' to clean the compiled source directory" />
		<echo message="Use 'ant doc' to generate JavaDoc documentation" />
		<echo message="Use 'ant gzip' to build a gzipped tarball and checksum for distribution (be sure to svn export first)" />
		<echo message="Use 'ant test' to run unit tests" />
	</target>

</project>
