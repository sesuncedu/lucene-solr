<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="build" name="SolrMarc">

	<property file="build.properties" />

	<tstamp>
		<format property="year" pattern="yyyy" />
		<format property="DSTAMP" pattern="yyyy-MM-dd" />
		<format property="TSTAMP" pattern="HH:mm:ss" />
		<format property="dateversion" pattern="yyyy.MM.dd.HH.mm.ss" />
	</tstamp>

	<target name="solrversion" unless="${solr.version}">
		<input message="solr.version must be defined as either 1.2 or 1.3" 
			validargs="1.2,1.3" 
			addproperty="solr.version" defaultvalue="1.2" />
	</target>
	
	<path id="classpath.jars" description="Jars for classpath, sensitive to solr version">
		<fileset dir="${lib.dir}" excludes="*/*.jar" includes="*.jar"/>
		<fileset dir="${lib.dir}/solr_${solr.version}" includes="*.jar" />
	</path>

	<target name="clean" description="clean the generated directories">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${doc.dir}" />
		<delete dir="${tag.dir}" />
	</target>

	<target name="init" depends="clean" description="create (empty) generated directories">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="compile" depends="init" description="Compile source code in the build directory">
		<javac destdir="${build.dir}" srcdir="${src.dir}" target="${java.compat.version}" source="${java.compat.version}" debug="on" encoding="utf-8">
	    <include name="**/*.java"/>
			<classpath refid="classpath.jars" />
		</javac>
	</target>

	<target name="build" depends="compile" description="create MarcImporter.jar in the dist directory">
		<echo message="${ant.project.name}: ${ant.file}" />
		<echo message="using solr version: ${solr.version}" />
		<!-- use a chained mapper to seperate the jar file names -->
		<pathconvert property="lib.jars.manifist.classpath" pathsep=" ">
			<path refid="classpath.jars" />
			<chainedmapper>
				<flattenmapper />
				<globmapper from="*" to="lib/*" />
			</chainedmapper>
		</pathconvert>
		<jar destfile="${dist.dir}/MarcImporter.jar">
			<fileset dir="${build.dir}" includes="**/*.class" />
			<fileset dir="." includes="*.properties" />
			<manifest>
				<attribute name="Main-Class" value="org.solrmarc.marc.MarcImporter" />
				<attribute name="Class-Path" value="${lib.jars.manifist.classpath}" />
			</manifest>
		</jar>
<!--		
		<jar destfile="zclient.jar">
			<fileset dir="bin" includes="**/ZClient.class,**/MarcTranslatedReader.class" />
		</jar>
-->
		<!-- copy lib/jars to dist/lib as a convenience -->
		<delete dir="${dist.dir}/lib" />
		<copy todir="${dist.dir}/lib" >
			<path refid="classpath.jars" />
		</copy>
	</target>

<!--	
	<target name="jar" depends="compile" description="create jar in the solrmarc directory">
		<pathconvert property="lib.jars.manifest.classpath" pathsep=" ">
			<path refid="classpath.jars" />
			<chainedmapper>
				<flattenmapper />
				<globmapper from="*" to="lib/*" />
			</chainedmapper>
		</pathconvert>
		<jar jarfile="${ant.project.name}.jar">
			<manifest>
				<attribute name="Main-Class" value="org.vufind.marc.MarcImporter" />
				<attribute name="Class-Path" value="${lib.jars.manifest.classpath}" />
			</manifest>
		</jar>
	</target>
-->


<!-- TESTING TARGETS -->

	<target name="testClean" description="clean generated test directories">
		<delete dir="${test.build.dir}" />
	</target>

	<target name="testInit" depends="testClean" description="create (empty) generated test directories">
		<mkdir dir="${test.build.dir}" />
	</target>

	<target name="testCompile" depends="clean,testInit,build" description="Compile test source code into test build dir">
		<javac destdir="${test.build.dir}" srcdir="${test.src.dir}" target="${java.compat.version}" source="${java.compat.version}" debug="on" encoding="utf-8">
			<classpath>
		  	<pathelement location="${dist.dir}/MarcImporter.jar"/>
				<path refid="classpath.jars" />
			</classpath>
	    <include name="org/**/*.java"/>
	    <exclude name="solr/**/*.java"/>
		</javac>
	</target>
	
	<target name="testJar" depends="testCompile" description="jar up test class files">
		<jar jarfile="${test.build.dir}/${test.jar}" >
			<fileset dir="${test.build.dir}" includes="**/*.class" />
		</jar>
	</target>

	<target name="testBibIx" depends="testJar" description="run junit tests for bib index">
		<echo message="using solr version: ${solr.version}" />

		<junit showoutput="yes" printsummary="yes" fork="yes" >
			<formatter type="plain" usefile="no" />

			<classpath>
				<pathelement location="${test.build.dir}/${test.jar}"/>
				<pathelement location="${dist.dir}/MarcImporter.jar"/>
				<path refid="classpath.jars" />
			</classpath>

			<sysproperty key="solrmarc.path" path="."/>
			<sysproperty key="solr.path" path="${test.solr.path}"/>
			<sysproperty key="solr.data.dir" path="${test.solr.data.dir}"/>
			<!-- these crucial properties set here b/c normally they are in 
			   the properties file indicated with an argument in the command line -->
			<sysproperty key="solr.indexer" value="${solr.indexer}"/>
			<sysproperty key="solr.indexer.properties" value="${solr.indexer.properties}"/>		
			<sysproperty key="marc.source" value="${marc.source}"/>
			
			<test name="${test.bibix.class}" />
		</junit>
	</target>
	
	<!-- UTILITY targets -->
	
	<target name="MarcPrinter">
		<java classname="MarcPrinter" failonerror="true" fork="yes">
			<classpath refid="classpath.jars" />
		</java>
	</target>

	<target name="Z3950Client">
		<java classname="MarcImporter" failonerror="true" fork="yes">
			<classpath refid="classpath.jars" />
		</java>
	</target>

	<!-- Macro to build a checksum file
                Only needed until the "format" option is supported
                by ant's checksum task -->
	<macrodef name="solrmarc-checksum">
		<attribute name="file" />

		<sequential>
			<checksum file="@{file}" property="@{file}.sum" algorithm="${checksum.algorithm}" />
			<basename file="@{file}" property="@{file}.base" />
			<concat destfile="@{file}.${checksum.algorithm}" force="yes" append="false" fixlastline="yes">
				<header trimleading="yes">${@{file}.sum} </header>
				<!-- empty fileset to trick concat -->
				<fileset dir="." excludes="**" />
				<footer trimleading="yest">${@file}.base}</footer>
			</concat>
		</sequential>
	</macrodef>

	<target name="gzip" description="Create a gzipped tarball and checksum file (in the tag directory) for distribution.  Be sure to svn export first!" depends="build">
		<echo message="Make sure to export the project (svn export) before running this task" />
		<mkdir dir="${tag.dir}" />
		<tar destfile="${tag.dir}/${ant.project.name}.tar.gz" compression="gzip" basedir="." excludes="bin/**,src/**,**/build.xml,**/**.mrc,**/.svn" />
		<solrmarc-checksum file="${tag.dir}/${ant.project.name}.tar.gz" />
	</target>

	<target name="doc" description="Generate JavaDoc documenation">
		<mkdir dir="${doc.dir}" />

		<javadoc destdir="${doc.dir}" author="true" version="true" overview="overview.html" use="true" windowtitle="SolrMarc" doctitle="Solrmarc Java Documentation" bottom="">
			<packageset dir="${src.dir}" defaultexcludes="yes">
				<exclude name="org/solrmarc/tests" />
			</packageset>

			<link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api/" packagelistLoc="." />
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
			<link href="http://junit.sourceforge.net/javadoc/" />
			<link href="http://lucene.apache.org/java/docs/api/" />
			<link href="http://lucene.apache.org/solr/api/" />

		</javadoc>
	</target>

	<target name="usage" description="Prints usage instructions">
		<echo message="Welcome to the Solrmarc indexing project" />
        <echo message="Use 'ant -Dsolr.version=&quot;1.2&quot;' to build the latest code based on version 1.2 of Solr" />
        <echo message="Use 'ant -Dsolr.version=&quot;1.3&quot;' to build the latest code based on version 1.3 of Solr" />
		<echo message="Use 'ant -p' to see all available commands" />
	</target>

	<chmod dir="." perm="u+x" includes="*.sh" />
</project>
