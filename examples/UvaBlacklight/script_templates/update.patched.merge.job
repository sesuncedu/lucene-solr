#!/bin/bash
SOLRMARCDISTDIR=/lib_content27/solrmarc/dist
PATH=$SOLRMARCDISTDIR/bin:$PATH
export PATH
num=0
JAVA_HOME=/usr/java/latest/bin/java
export JAVA_HOME

DATADIR=/lib_content27/marc
INPUTDIR=$DATADIR/incoming_merge_patch
PROCESSEDDIR=$DATADIR/processed_merge_patch
RESULTSDIR=$DATADIR/results_merge_patch
verbose=
if [ "$1" == "-v" ]  ; then 
    verbose=-v
fi

if [ "$verbose" == "-v" ] ; then
    echo sort initial night updates
fi

for file in `find $INPUTDIR -name '*.mrc' -print | sort`
do
    fname=`basename $file`
    froot=`basename $file .mrc`
    dir=`dirname $file`
    delfname=$froot.del
    delfile=$dir/$delfname
    output=$RESULTSDIR/results_$froot
        
    marcsort $file > $file.sorted 2> /dev/null
    mv $file.sorted $file
    sort -n $delfile > $delfile.sorted
    mv $delfile.sorted $delfile
done

if [ "$verbose" == "-v" ] ; then
    echo merging initial nightly updates
fi

for updatefile in `find $INPUTDIR -name '*.mrc' -print | sort`
do 
    endId=u0

    for file in $DATADIR/full_dump_patched/*.mrc 
    do
        if [ "$verbose" == "-v" ] ; then
            echo   merging $file
        fi
        
        cp $file $DATADIR/full_dump_patched_prev
        startId=$endId
        file0=`dirname $file`
        filebase=`basename $file`
        file1=`echo $filebase | sed -e 's/\([^0-9]*\)[0-9]*.*/\1/'`
        file2=`echo $filebase | sed -e 's/[^0-9]*0*\([1-9][0-9]*\).*/\1/'`
        file3=`echo $filebase | sed -e 's/[^0-9]*[0-9]*\(.*\)/\1/'`
        file2=`echo $((file2+1001)) | sed -e 's/.\(...\)/\1/'`
        nextfile=$file0/$file1$file2$file3
        len=`head -c 5 $nextfile 2> /dev/null`
        if [ $? != 0 ] 
            then
                endId=u9999999999
            else
                endId=`head -c $len $nextfile | getrecord -id`
        fi
        echo $file  $startId  $endId
        marcupdate -min $startId -max $endId $file $updatefile > $file.updated
        mv $file.updated $file
    done
done

location_file=$DATADIR/incoming/location.txt
prev_location_file=$DATADIR/incoming/prev_location.txt
prev_prev_location_file=$DATADIR/incoming/prev_prev_location.txt
changed_loc_file=$DATADIR/incoming/changed.txt
patch_dir=$DATADIR/patched_debug

#make sure patch directory exists
mkdir $patch_dir 2> /dev/null
patch_out=$patch_dir/location_patch_`date +%Y%m%d`.mrc 
#make sure todays patch file does not exist 
rm $patch_out 2> /dev/null

if [ "$verbose" == "-v" ] ; then
    echo processing location.txt
fi

# find differences between yesterdays location and todays.
diff $prev_location_file $location_file | egrep '^[<>]' | sed -e 's/[<>] \([0-9]*\).*/\1/' | sort -n | uniq > $changed_loc_file
cp $changed_loc_file $DATADIR/incoming/changed_`date +%Y%m%d`.txt

cat $prev_location_file | cut -d'|' -f1 | uniq > $prev_location_file.uniq
cat $location_file | cut -d'|' -f1 | uniq > $location_file.uniq
diff --side-by-side $location_file.uniq $prev_location_file.uniq | egrep '<' | sed -e's/\(^[0-9]*\)[\t ].*/u\1/' > $DATADIR/incoming/new_recs_`date +%Y%m%d`.txt
datestr=`date +%Y%m%d`
cat $DATADIR/incoming/new_recs_`date +%Y%m%d`.txt | sed -e "s/\(.*\)/\1\t$datestr/" >> $DATADIR/incoming/new_recs_dates.txt
cat $DATADIR/incoming/new_recs_dates.txt | sed -e 's/u//' | sort -n -u | sed -e 's/\(.*\)/u\1/' >  $DATADIR/incoming/new_recs_dates_sorted.txt
cp $DATADIR/incoming/new_recs_dates_sorted.txt $SOLRMARCDISTDIR


for file in `find $DATADIR/full_dump_patched -name 'uva_*.mrc' -print | sort`
do
    if [ "$verbose" == "-v" ] ; then
        echo $file
    fi
    java -Dsolrmarc.main.class="org.solrmarc.marc.MarcPatcher" -jar $SOLRMARCDISTDIR/SolrMarc.jar $file $location_file $changed_loc_file changesOnly handleAllLocs >> $patch_out
done 

mv $prev_location_file $prev_prev_location_file
cp $location_file $prev_location_file

if [ "$verbose" == "-v" ] ; then
    echo merging patch file
fi

updatefile=$patch_out
endId=u0

for file in $DATADIR/full_dump_patched/*.mrc 
do
    startId=$endId
    file0=`dirname $file`
    filebase=`basename $file`
    file1=`echo $filebase | sed -e 's/\([^0-9]*\)[0-9]*.*/\1/'`
    file2=`echo $filebase | sed -e 's/[^0-9]*0*\([1-9][0-9]*\).*/\1/'`
    file3=`echo $filebase | sed -e 's/[^0-9]*[0-9]*\(.*\)/\1/'`
    file2=`echo $((file2+1001)) | sed -e 's/.\(...\)/\1/'`
    nextfile=$file0/$file1$file2$file3
    len=`head -c 5 $nextfile 2> /dev/null`
    if [ $? != 0 ] 
        then
            endId=u9999999999
        else
            endId=`head -c $len $nextfile | getrecord -id`
    fi
    echo $file  $startId  $endId
    marcupdate -min $startId -max $endId $file $updatefile > $file.updated
    mv $file.updated $file
done

summary_hold_file=$DATADIR/incoming/allmhlds
summary_hold_out=$patch_dir/summary_holdings_`date +%Y%m%d`.mrc 
#make sure todays patch file does not exist 
rm $summary_hold_out 2> /dev/null

for file in $DATADIR/full_dump_patched/*.mrc
do
    merge_summary_holdings -s $summary_hold_file $file >> $summary_hold_out
done

updatefile=$summary_hold_out
endId=u0

for file in $DATADIR/full_dump_patched/*.mrc 
do
    startId=$endId
    file0=`dirname $file`
    filebase=`basename $file`
    file1=`echo $filebase | sed -e 's/\([^0-9]*\)[0-9]*.*/\1/'`
    file2=`echo $filebase | sed -e 's/[^0-9]*0*\([1-9][0-9]*\).*/\1/'`
    file3=`echo $filebase | sed -e 's/[^0-9]*[0-9]*\(.*\)/\1/'`
    file2=`echo $((file2+1001)) | sed -e 's/.\(...\)/\1/'`
    nextfile=$file0/$file1$file2$file3
    len=`head -c 5 $nextfile 2> /dev/null`
    if [ $? != 0 ] 
        then
            endId=u9999999999
        else
            endId=`head -c $len $nextfile | getrecord -id`
    fi
    echo $file  $startId  $endId
    marcupdate -min $startId -max $endId $file $updatefile > $file.updated
    mv $file.updated $file
done

#now update the AllShadowedIds.txt file used for shadowing records and select out records whose shadowed-edness has changed.

shadowedDir=$DATADIR/incoming
shadowedRaw=$shadowedDir/AllShadowedIdsRaw.txt
shadowedIds=$shadowedDir/AllShadowedIds.txt
shadowedPrev=$shadowedDir/prev_AllShadowedIds.txt
patch_dir=$DATADIR/patched_debug
shadowedChangedRecs=$patch_dir/changed_shadow_recs_`date +%Y%m%d`.mrc

if test "$shadowedRaw" -nt "$shadowedIds"
then
    mv $shadowedIds $shadowedPrev

    sed -e 's/u//' < $shadowedRaw | sort -n | sed -e 's/^/u/' > $shadowedIds

    cp $shadowedIds $SOLRMARCDISTDIR

    shadowed_changed_ids=$shadowedDir/AllShadowedChanges_`date +%Y%m%d`.txt

    cat $shadowedPrev $shadowedIds | dos2unix | sed -e 's/u//' | sort -n | uniq -u | sed -e 's/^/u/' | cut -d'|' -f1 | uniq > $shadowed_changed_ids

    cat $DATADIR/full_dump_patched/*.mrc | getrecord $shadowed_changed_ids > $shadowedChangedRecs
fi

#now update the BoundWith.txt file used for getting locations of items that are bound with other items.

boundWithDir=$DATADIR/incoming
boundWithIds=$boundWithDir/BoundWithIds.txt
boundWithPrev=$boundWithDir/prev_BoundWith.txt
boundWithLocs=$boundWithDir/BoundWith.txt
patch_dir=$DATADIR/patched_debug
boundWithChangedRecs=$patch_dir/changed_boundwith_recs_`date +%Y%m%d`.mrc

if test "$boundWithIds" -nt "$boundWithLocs"
then
    mv $boundWithLocs $boundWithPrev

    cat $boundWithIds | sort -n -t'|' --key=2 | boundwith.perl $location_file | sort -n -t'|' --key=1 > $boundWithLocs

    cp $boundWithLocs $SOLRMARCDISTDIR

    bound_with_changed_ids=$boundWithDir/BoundWithChanges_`date +%Y%m%d`.txt

    cat $boundWithLocs $boundWithPrev | dos2unix | sort -n -t'|' --key=1 | uniq -u | cut -d'|' -f1 | uniq | sed -e 's/\([0-9]*\).*/u\1/' > $bound_with_changed_ids

    cat $DATADIR/full_dump_patched/*.mrc | getrecord $bound_with_changed_ids > $boundWithChangedRecs
fi

if [ "$verbose" == "-v" ] ; then
    echo move incoming files to processed dir
fi

for file in `find $INPUTDIR -name '*.mrc' -print | sort`
do
    mv $file $PROCESSEDDIR
done

for file in `find $INPUTDIR -name '*.del' -print | sort`
do
    mv $file $PROCESSEDDIR
done

