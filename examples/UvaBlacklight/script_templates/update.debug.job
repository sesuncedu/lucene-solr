#!/bin/bash
PATH=/usr/local/projects/solrmarc-2.1/dist/bin:$PATH
export PATH
num=0
JAVA_HOME=/usr/java/latest/bin/java
export JAVA_HOME

dirname=debug
configname=blacklight_test_config.properties

DATADIR=/usr/local/projects/marc
INPUTDIR=$DATADIR/incoming_${dirname}
PROCESSEDDIR=$DATADIR/processed_${dirname}
RESULTSDIR=$DATADIR/results_${dirname}
verbose=0
if [ "$1" == "-v" ]  ; then 
    verbose=1
fi

if [ $verbose -eq "1" ] ; then
    echo processing initial nightly updates
fi

for file in `find $INPUTDIR -name '*.mrc' -print | sort`
    do
    fname=`basename $file`
    froot=`basename $file .mrc`
    dir=`dirname $file`
    delfname=$froot.del
    delfile=$dir/$delfname
    output=$RESULTSDIR/results_$froot
        
    marcsort $file > $file.sorted 2> /dev/null
    mv $file.sorted $file
    sort -n $delfile > $delfile.sorted
    mv $delfile.sorted $delfile

    if [ $verbose -eq "1" ] ; then
        echo indexing $file
    fi


    #check whether the mrc file has already been processed
    if [ -e "$PROCESSEDDIR/$fname" ] ; then
            cmp -s $file $PROCESSEDDIR/$fname
        if [ "$?" -eq 1 ] ; then
            # file already exists in processed directory but its different
                # than the new incoming one, make backup and index new file
            mv $PROCESSEDDIR/$fname $PROCESSEDDIR/$fname-`date +%Y%m%e`
            cp $file $PROCESSEDDIR
            indexfile ${configname} $file > $output 2>&1
            let "num += 1"
        else
            # incoming file already processed, just delete it
            rm $file
        fi
    else
        # file doesnt exist in processed dir, index it normally
        cp $file $PROCESSEDDIR
        indexfile ${configname} $file  > $output 2>&1
        let "num += 1"
    fi

    if [ $verbose -eq "1" ] ; then
        echo indexing $delfile
    fi

    #check whether the del file has already been processed
    if [ -e "$delfile" ] ; then
        if [ -e "$PROCESSEDDIR/$delfname" ] ; then
                cmp -s $delfile $PROCESSEDDIR/$delfname
            if [ "$?" -eq 1 ] ; then
                # file already exists in processed directory but its different
                    # than the new incoming one, make backup and index new file
                mv $PROCESSEDDIR/$delfname $PROCESSEDDIR/$delfname-`date +%Y%m%e`
                cp $delfile $PROCESSEDDIR
                indexfile ${configname} NONE $delfile >> $output 2>&1
                let "num += 1"
            else
                # incoming file already processed, just delete it
                rm $delfile
            fi
        else
            # file doesnt exist in processed dir, index it normally
            cp $delfile $PROCESSEDDIR
            indexfile ${configname} NONE $delfile >> $output 2>&1            
            let "num += 1"
        fi
    else
        # no .del file exists corresponding to the .mrc file found in the incoming directory
        # do nothing, be happy
        nodelfile=true
    fi

    done

if [ $verbose -eq "1" ] ; then
    echo merging initial nightly updates
fi

for updatefile in `find $INPUTDIR -name '*.mrc' -print | sort`
do 
    endId=u0

    for file in /usr/local/projects/marc/full_dump_patched/*.mrc 
    do
        if [ $verbose -eq "1" ] ; then
            echo   merging $file
        fi
        
        startId=$endId
        file0=`dirname $file`
        filebase=`basename $file`
        file1=`echo $filebase | sed -e 's/\([^0-9]*\)[0-9]*.*/\1/'`
        file2=`echo $filebase | sed -e 's/[^0-9]*0*\([1-9][0-9]*\).*/\1/'`
        file3=`echo $filebase | sed -e 's/[^0-9]*[0-9]*\(.*\)/\1/'`
        file2=`echo $((file2+1001)) | sed -e 's/.\(...\)/\1/'`
        nextfile=$file0/$file1$file2$file3
        len=`head -c 5 $nextfile 2> /dev/null`
        if [ $? != 0 ] 
            then
                endId=u9999999999
            else
                endId=`head -c $len $nextfile | printrecord '001'| sed -e 's/001 //'`
        fi
        echo $file  $startId  $endId
        marcupdate -min $startId -max $endId $file $updatefile > $file.updated
        mv $file.updated $file
    done
done

location_file=/usr/local/projects/marc/incoming/location.txt
patch_dir=/usr/local/projects/marc/patched_debug

#make sure patch directory exists
mkdir $patch_dir 2> /dev/null
patch_out=$patch_dir/location_patch_`date +%Y%m%d`.mrc 
#make sure todays patch file does not exist 
rm $patch_out 2> /dev/null

if [ $verbose -eq "1" ] ; then
    echo processing location.txt
fi

for file in `find /usr/local/projects/marc/full_dump_patched -name 'uva_*.mrc' -print | sort`
do
    if [ $verbose -eq "1" ] ; then
        echo $file
    fi
    java -Dsolrmarc.main.class="org.solrmarc.marc.MarcPatcher" -jar /usr/local/projects/solrmarc-2.1/dist/SolrMarc.jar $file  $location_file changesOnly >> $patch_out
done 

if [ $verbose -eq "1" ] ; then
    echo indexing patch file
fi

file=$patch_out
    fname=`basename $file`
    froot=`basename $file .mrc`
    dir=`dirname $file`
    output=$RESULTSDIR/results_patch_$froot

    #check whether the mrc file has already been processed
    if [ -e "$PROCESSEDDIR/$fname" ] ; then
            cmp -s $file $PROCESSEDDIR/$fname
        if [ "$?" -eq 1 ] ; then
            # file already exists in processed directory but its different
                # than the new incoming one, make backup and index new file
            mv $PROCESSEDDIR/$fname $PROCESSEDDIR/$fname-`date +%Y%m%e`
            cp $file $PROCESSEDDIR
            indexfile ${configname} $file > $output 2>&1
            let "num += 1"
        else
            # incoming file already processed, just delete it
            rm $file
        fi
    else
        # file doesnt exist in processed dir, index it normally
        cp $file $PROCESSEDDIR
        indexfile ${configname} $file  > $output 2>&1
        let "num += 1"
    fi

if [ $verbose -eq "1" ] ; then
    echo merging patch file
fi


updatefile=$patch_out
    endId=u0

    for file in /usr/local/projects/marc/full_dump_patched/*.mrc 
    do
        startId=$endId
        file1=`echo $file | sed -e 's/\([^0-9]*\)[0-9]*.*/\1/'`
        file2=`echo $file | sed -e 's/[^0-9]*0*\([1-9][0-9]*\).*/\1/'`
        file3=`echo $file | sed -e 's/[^0-9]*[0-9]*\(.*\)/\1/'`
        file2=`echo $((file2+1001)) | sed -e 's/.\(...\)/\1/'`
        nextfile=$file1$file2$file3
        len=`head -c 5 $nextfile 2> /dev/null`
        if [ $? != 0 ] 
            then
                endId=u9999999999
            else
                endId=`head -c $len $nextfile | printrecord '001'| sed -e 's/001 //'`
        fi
        echo $file  $startId  $endId
        marcupdate -min $startId -max $endId $file $updatefile > $file.updated
        mv $file.updated $file
    done

# run booklist daily update
runbooklist daily ${configname} > $RESULTSDIR/results_booklists_$froot 2>&1

# if any files were indexed, optimize solr index
if [ "$num" -ne 0 ] 
    then
    optimizesolr ${configname} > $RESULTSDIR/results_optimize 2>&1
fi

